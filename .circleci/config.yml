version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  arm-clang:
    docker:
      - image: cimg/base:current
    resource_class: small
    environment:
      TOOLCHAIN_URL: https://github.com/ARM-software/LLVM-embedded-toolchain-for-Arm/releases/download/release-17.0.1/LLVMEmbeddedToolchainForArm-17.0.1-Linux-x86_64.tar.xz

    steps:
      - checkout
      - restore_cache:
          key: $TOOLCHAIN_URL
          paths:
            - ~/cache/toolchain
      - run:
          name: Install Toolchain
          command: |
            # Only download if folder does not exist (not cached)
            if [ ! -d "~/cache/toolchain" ]; then
              mkdir -p ~/cache/toolchain
              wget --progress=dot:mega $TOOLCHAIN_URL -O toolchain.tar.gz
              tar -C ~/cache/toolchain -xaf toolchain.tar.gz
            fi
      - save_cache:
          key: $TOOLCHAIN_URL
          paths:
            - ~/cache/toolchain
      - run:
          name: Setup build environment
          command: |
            echo "export PATH=$PATH:`echo ~/cache/toolchain/*/bin`" >> $BASH_ENV
            # install ninja
            wget https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-linux.zip -O ninja-linux.zip
            unzip ninja-linux.zip -d ~/bin
      - run:
          name: Get Dependencies
          command: |
            python tools/get_deps.py stm32f1
      - run:
          name: Build
          command: python tools/build.py -s cmake --toolchain clang --one-per-family stm32f1


# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - arm-clang
